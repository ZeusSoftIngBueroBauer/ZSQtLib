<GUIMain                 > -> <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<GUIMain                 >    <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread: postEvent( {ZS::Apps::Test::IpcTrace::ReqTest, stopClass3Thread} )
<GUIMain                 > <- <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<MyClass2ThreadNewName1  > -> <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.event({ZS::Apps::Test::IpcTrace::ReqTest, stopClass3Thread})
<MyClass2ThreadNewName1  >    -> <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<MyClass2ThreadNewName1  >       -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.quit()
<MyClass2ThreadNewName1  >       <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.quit()
<MyClass3ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.exec(): 0
<MyClass3ThreadNewName1  > -> <ZS::Apps::Test::IpcTrace::CMyClass3> NewName1.dtor()
<MyClass3ThreadNewName1  >    -> <ZS::System::CMutex> CMyClass3-NewName1-Counters.dtor()
<MyClass3ThreadNewName1  >    <- <ZS::System::CMutex> CMyClass3-NewName1-Counters.dtor()
<MyClass3ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass3> NewName1.dtor()
<MyClass3ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.run()
<MyClass2ThreadNewName1  >       -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.wait(30000 ms)
<MyClass2ThreadNewName1  >       <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.wait(): true
<MyClass2ThreadNewName1  >       -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.dtor()
<MyClass2ThreadNewName1  >       <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadNewName1.dtor()
<MyClass2ThreadNewName1  >    <- <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<MyClass2ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.event()