#*******************************************************************************
#
# Copyright 2004 - 2017 by    ZeusSoft, Ing. Buero Bauer
#                             Gewerbepark 28
#                             D-83670 Bad Heilbrunn
#                             Tel: 0049 8046 9488
#                             www.zeussoft.de
#                             E-Mail: mailbox@zeussoft.de
#
#-------------------------------------------------------------------------------
#
# Content: This file is part of the ZSQtLib.
#
# This file may be used with no license restrictions for your needs. But it is not
# allowed to resell any modules of the ZSQtLib veiling the original developer of
# the modules. Therefore the copyright link to ZeusSoft, Ing. Buero Bauer must not
# be removed from the header of the source code modules.
#
# ZeusSoft, Ing. Buero Bauer provides the source code as is without any guarantee
# that the code is written without faults.
#
# ZeusSoft, Ing. Buero Bauer does not assume any liability for any damages which
# may result in using the software modules.
#
#-------------------------------------------------------------------------------
#
# $Date: $
#
# $Revision: $
#
# $Author: $
#
# $History: $
#
#*******************************************************************************

# Get absolute path and directory name of this make file.
# As make reads various makefiles, including any obtained from the MAKEFILES
# variable, the command line, the default files, or from include directives,
# their names will be automatically appended to the MAKEFILE_LIST variable.
# They are added right before make begins to parse them.
# This means that if the first thing a makefile does is examine the last word
# in this variable, it will be the name of the current makefile.
# But please note that if once the current makefile has used include, however,
# the last word will be the just-included makefile.
# Please note that $(lastword $(MAKEFILE_LIST)) may already return an absolute path.
# If so both $(abspath $(lastword $(MAKEFILE_LIST))) and $(realpath $(lastword $(MAKEFILE_LIST)))
# don't return the absolute path but insert the absolute path of the make file before
# the absolute path again resulting in a MAKEFILE_PATH like "C:\...\Make\ZSSys\C:\...\Make\ZSSys\ZSSys.mk".
# So we only apply realpath to detect the MAKEFILE_PATH if MAKEFILE_LIST does not contain
# an absolute path already.

MAKEFILE_PATH := $(lastword $(MAKEFILE_LIST))
ifeq ($(findstring :,$(MAKEFILE_PATH)), )
    MAKEFILE_PATH := $(realpath $(lastword $(MAKEFILE_LIST)))
endif
MAKEFILE_PATH := $(subst \\,/,$(MAKEFILE_PATH))
MAKEFILE_DIR := $(shell dirname $(MAKEFILE_PATH))

$(info )
$(info ---> ================================================================== )
$(info ---> $(MAKEFILE_PATH) )
$(info ---> ================================================================== )
$(info )


#===============================================================================
# Preconditions
#===============================================================================

# Environment Variable ZSQTLIB_DIR_TMP
#-------------------------------------------------------------------------------
# Range [Valid Directory Path]
# This environment variable specifies the base directory of the temporary
# generated output files.
ifndef ZSQTLIB_DIR_TMP
    $(error ZSQTLIB_DIR_TMP is not defined)
endif

# Environment Variable MODULE
#-------------------------------------------------------------------------------
# Range [ZSSys, ZSSysGUI, ZSIpc, ...]
# Name of the module (library, executable) which should be generated by this
# make file. This is usually the base name of this make file.
ifndef MODULE
    $(error MODULE [ZSSys, ZSSysGUI, ZSIpc, ...] is not defined)
endif

# Environment Variable PLATFORM
#-------------------------------------------------------------------------------
# Range [Valid Directory Path]
# Specifies the operation system (PLATFORM) to be built for.
ifndef PLATFORM
    $(error PLATFORM is not defined)
endif

# Environment Variable CONFIG
#-------------------------------------------------------------------------------
# Range [Release, Debug]
# Specifies whether the release or debug versions should be created.
ifndef CONFIG
    $(error CONFIG is not defined)
endif

# Environment Variable PYTHONVERSION
#-------------------------------------------------------------------------------
# Range [27, 34]
# Specifies the python version for which site packages should be created.
ifndef PYTHONVERSION
    $(error PYTHONVERSION is not defined)
endif


#===============================================================================
# Directory paths for intermediately generated files
#===============================================================================

# On Windows systems those directory paths are relative to the base directory
# of the library modules.
# On Linux machines those directory paths are relative to the root in "/tmp".

# Path: DEP_DIR
#-------------------------------------------------------------------------------
# Directory path where the dependency files (*.d) while be written to.
# Those dependency files are used to reproduce the AUTO_DEPEND function
# for header files included by CPP source files.
DEP_DIR := $(ZSQTLIB_DIR_TMP)/Dep/$(MODULE)/$(PLATFORM)/$(CONFIG)
export DEP_DIR

# Path: INT_DIR
#-------------------------------------------------------------------------------
# Directory path where the compiler generated intermediate files
# (*.obj, ..) while be written to.
INT_DIR := $(ZSQTLIB_DIR_TMP)/Int/$(MODULE)/$(PLATFORM)/$(CONFIG)
export INT_DIR

# Path: MOC_DIR
#-------------------------------------------------------------------------------
# Directory path where the "*.cpp" output files of the Qt MOC compiler
# will be written to.
MOC_DIR := $(ZSQTLIB_DIR_TMP)/Moc/$(MODULE)/$(PLATFORM)/$(CONFIG)
export MOC_DIR

# Path: OUT_DIR
#-------------------------------------------------------------------------------
# Directory path where the target output files of the compiler and linker
# (*.dll, *.exe, ..) while be written to.
OUT_DIR := $(ZSQTLIB_DIR_TMP)/Out/$(MODULE)/$(PLATFORM)/$(CONFIG)
export OUT_DIR


$(info )
$(info <--- $(MAKEFILE_PATH) )
$(info )
