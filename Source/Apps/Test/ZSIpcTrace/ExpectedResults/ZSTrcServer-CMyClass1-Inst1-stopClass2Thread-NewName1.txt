<GUIMain                 > -> <ZS::Apps::Test::IpcTrace::CMyClass1> Inst1.stopClass2Thread()
<GUIMain                 >    -> <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.quit()
<GUIMain                 >    <- <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.quit()
<MyClass2ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadInst1.exec(): 0
<MyClass2ThreadNewName1  > -> <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.dtor()
<MyClass2ThreadNewName1  >    -> <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<MyClass2ThreadNewName1  >    <- <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.stopClass3Thread()
<MyClass2ThreadNewName1  >    -> <ZS::System::CRecursiveMutex> CMyClass2-NewName1-Counters.dtor()
<MyClass2ThreadNewName1  >    <- <ZS::System::CRecursiveMutex> CMyClass2-NewName1-Counters.dtor()
<MyClass2ThreadNewName1  >    -> <ZS::System::CMutex> CMyClass2-NewName1-WaitClass3ThreadRunning.dtor()
<MyClass2ThreadNewName1  >    <- <ZS::System::CMutex> CMyClass2-NewName1-WaitClass3ThreadRunning.dtor()
<MyClass2ThreadNewName1  >    -> <ZS::System::CWaitCondition> CMyClass2-NewName1-Class3ThreadRunning.dtor()
<MyClass2ThreadNewName1  >    <- <ZS::System::CWaitCondition> CMyClass2-NewName1-Class3ThreadRunning.dtor()
<MyClass2ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass2> NewName1.dtor()
<MyClass2ThreadNewName1  > <- <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadInst1.run()
<GUIMain                 >    -> <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.wait(30000 ms)
<GUIMain                 >    <- <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.wait(): true
<GUIMain                 >    -> <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.dtor()
<GUIMain                 >       -> <ZS::System::CMutex> CMyClass2Thread-MyClass2ThreadNewName1-WaitClass2Created.dtor()
<GUIMain                 >       <- <ZS::System::CMutex> CMyClass2Thread-MyClass2ThreadNewName1-WaitClass2Created.dtor()
<GUIMain                 >       -> <ZS::System::CWaitCondition> CMyClass2Thread-MyClass2ThreadNewName1-WaitClass2Created.dtor()
<GUIMain                 >       <- <ZS::System::CWaitCondition> CMyClass2Thread-MyClass2ThreadNewName1-WaitClass2Created.dtor()
<GUIMain                 >    <- <ZS::Apps::Test::IpcTrace::CMyClass2Thread> MyClass2ThreadNewName1.dtor()
<GUIMain                 > <- <ZS::Apps::Test::IpcTrace::CMyClass1> Inst1.stopClass2Thread()