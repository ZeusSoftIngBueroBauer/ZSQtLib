<GUIMain                 > -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.startMessageTimer()
<GUIMain                 >    -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<GUIMain                 >       -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<GUIMain                 >       <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<GUIMain                 >    <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<GUIMain                 >    -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<GUIMain                 >       -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<GUIMain                 >       <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<GUIMain                 >    <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<GUIMain                 > <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.startMessageTimer()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.event({ZS::Apps::Test::IpcTraceDllIfQtApp::ReqTest, startMessageTimer})
<CMyClass2ThreadInst1    >          -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.startMessageTimer()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >                -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >                <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.startMessageTimer: m_pTmrMessages->start(100)
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >                -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >                <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >          <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.startMessageTimer()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.event()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=1
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=2
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=3
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=4
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=5
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=6
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=7
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=8
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=9
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >       -> <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.lock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.ctor()
<CMyClass2ThreadInst1    >          <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout: MsgCount=10
<CMyClass2ThreadInst1    >          -> <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >             -> <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >             <- <ZS::System::CMutex> CMyClass2::Inst1::Counters.unlock()
<CMyClass2ThreadInst1    >          <- <ZS::System::CMutexLocker> CMyClass2::Inst1::Counters.dtor()
<CMyClass2ThreadInst1    >       <- <ZS::Apps::Test::IpcTraceDllIfQtApp::CMyClass2> Inst1.onTmrMessagesTimeout()