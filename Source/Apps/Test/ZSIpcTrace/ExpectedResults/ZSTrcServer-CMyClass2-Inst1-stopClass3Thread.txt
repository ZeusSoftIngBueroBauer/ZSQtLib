<GUIMain                 > -> <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.stopClass3Thread()
<GUIMain                 >    <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.stopClass3Thread: postEvent( {ZS::Apps::Test::IpcTrace::ReqTest, stopClass3Thread} )
<GUIMain                 > <- <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.stopClass3Thread()
<MyClass2ThreadInst1     >       -> <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.event({ZS::Apps::Test::IpcTrace::ReqTest, stopClass3Thread})
<MyClass2ThreadInst1     >          -> <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.stopClass3Thread()
<MyClass2ThreadInst1     >             -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.quit()
<MyClass2ThreadInst1     >             <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.quit()
<MyClass3ThreadInst1     >    <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.exec(): 0
<MyClass3ThreadInst1     >    -> <ZS::Apps::Test::IpcTrace::CMyClass3> Inst1.dtor()
<MyClass3ThreadInst1     >       -> <ZS::System::CMutex> CMyClass3::Inst1::Counters.dtor()
<MyClass3ThreadInst1     >       <- <ZS::System::CMutex> CMyClass3::Inst1::Counters.dtor()
<MyClass3ThreadInst1     >    <- <ZS::Apps::Test::IpcTrace::CMyClass3> Inst1.dtor()
<MyClass3ThreadInst1     > <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.run()
<MyClass2ThreadInst1     >             -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.wait(30000 ms)
<MyClass2ThreadInst1     >             <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.wait(): true
<MyClass2ThreadInst1     >             -> <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.dtor()
<MyClass2ThreadInst1     >             <- <ZS::Apps::Test::IpcTrace::CMyClass3Thread> MyClass3ThreadInst1.dtor()
<MyClass2ThreadInst1     >          <- <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.stopClass3Thread()
<MyClass2ThreadInst1     >       <- <ZS::Apps::Test::IpcTrace::CMyClass2> Inst1.event()